""" How to send a Bearer token in the Authorization header.

Application Under Test (AUT): https://demoqa.com/books
API Docs: https://demoqa.com/swagger

* In order to GET or DELETE a User, a Bearer token is required.
* In this API, tokens must be generated by /GenerateToken endpoint.
* This example ONLY shows how to send a Bearer token in the Authorization header.
"""

# The most common library for working with Web APIs in Python is called "requests"
import requests
from requests import Response
from typing import Dict


# The BASE URL is the same for all routes in the API.
## This constant variable is usually defined in a more global config file.
BASE_URL = "https://demoqa.com"

# aka ENDPOINT. The address, including path variables, of the endpoint to hit.
## In this API, the route to GET and DELETE a User is the same.
## However, we can specify which Action Method to use (see below)
ROUTE = "/Account/v1/User"


def delete_user(user_id, token) -> Response:
    # 1. Create the headers. Most auths go under the Authorization header.
    headers = {"Authorization": f"Bearer {token}"}

    # 2. {user_id} is a path variable. Build the Request URL with all the pieces we need.
    request_url = f"{BASE_URL + ROUTE}/{user_id}"

    # 3. Send the request using Action Method we want to use.
    response = requests.delete(request_url, headers=headers)

    # 4. Handle the response object however we want.
    if not response.ok:
        raise ConnectionError(f"Unable to delete user: {response.content}")

    # 5. Return the response object.
    return response


def get_user(user_id, token) -> Dict:
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{BASE_URL + ROUTE}/{user_id}", headers=headers)
    if not response.ok:
        raise ConnectionError(f"Unable to get user: {response.content}")
    # Similar to the delete_user() function above,
    # but only return the JSON data (a dictionary or Dict in Python) from the response instead.
    return response.json()
